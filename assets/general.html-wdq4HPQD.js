import{_ as e,o as a,c as l,e as i}from"./app-Ec_z8kpw.js";const t={},c=i('<h2 id="索引简述" tabindex="-1"><a class="header-anchor" href="#索引简述"><span>索引简述</span></a></h2><ul><li>一种排好序的数据结构。</li></ul><p>MySQL中使用<code>B+</code>树作为索引结构。</p><h2 id="基本的索引结构" tabindex="-1"><a class="header-anchor" href="#基本的索引结构"><span>基本的索引结构</span></a></h2><ul><li>Hash。不支持顺序和范围查询</li><li>二叉查找树BST。有退化成链的风险。</li><li>AVL。自平衡二叉查找树。AVL平衡之差为1。频繁的旋转操作会增加磁盘IO的次数。</li><li>红黑树。保持相对平衡状态，维持红黑树五个基本性质即可。缺点和AVL类似。</li><li>B tree和 B+ tree。B+是B的变种。数据库系统和文件系统都采用B-Tree或变种作为索引结构。B+树只在叶节点存放数据和key，其他节点只存放Key。如此情况下就能减少磁盘IO，只在真正需要的时候直接读取数据。B+树直接使用链表进行便利即可，B树需要中序遍历。</li></ul>',5),n=[c];function r(s,o){return a(),l("div",null,n)}const _=e(t,[["render",r],["__file","general.html.vue"]]);export{_ as default};
