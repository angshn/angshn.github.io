import{_ as a,o as i,c as s,e}from"./app-Ec_z8kpw.js";const o={},t=e('<h1 id="http" tabindex="-1"><a class="header-anchor" href="#http"><span>HTTP</span></a></h1><h2 id="http认证" tabindex="-1"><a class="header-anchor" href="#http认证"><span>HTTP认证</span></a></h2><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h3><p>认证是为了确认对方是否拥有访问自身系统的权限，因此需要核对对方才知道的信息，广为人知的就是用户名及其密码，除此之外还有：</p><ul><li>动态令牌</li><li>数字证书</li><li>生物认证</li><li>IC卡</li></ul><p>在HTTP/1.1中使用的认证方式有以下几种：</p><ul><li>BASIC认证（基本认证）</li><li>DIGEST认证（摘要认证）</li><li>SSL客户端认证</li><li>FormBase认证（基于表单的认证）</li></ul><h3 id="basic-认证" tabindex="-1"><a class="header-anchor" href="#basic-认证"><span>Basic 认证</span></a></h3><p>在美团实习期间，我在一些代码中发现了Basic认证方式，下来对Basic认证方式一探究竟。</p><p>Basic认证是HTTP/1.0就存在的认证方式，目前还有该方法的使用场景。Basic认证比较简单，一般有以下几个步骤：</p><ol><li>客户端请求资源A</li><li>服务器发现客户请求的A资源需要认证，此时回返回<strong>401状态码</strong>及<code>WWW-Authorization</code>响应头，告诉用户需要提供用户名和密码。</li><li>接收到<strong>401状态码</strong>的请求之后，客户端需要讲用户名和密码发送给服务器进行验证。Basic方式发送的内容为<strong>Basic Base64(username:password)</strong>，用户名和密码用<code>:</code>分割，然后使用Base64进行编码得到一个字符串，将该字符串写入到下一次请求的请求头<code>Authorization</code>中，例如<code>Authorization: Basic Z3Vlc3Q6Z3Vlc3Q=</code>。</li><li>服务器接收到携带有<code>Authorization</code>的请求后会对请求进行认证，如果正确就会返回正确的资源，否则返回<strong>400状态码</strong>的拒绝请求响应。</li></ol><p><strong>Basic 认证的问题</strong>：由于Base64编码得到的内容也可以被解码，因此携带用户信息的请求在网络中传输时基本处于赤裸状态，因此基本的Basic认证存在严重的安全问题，在非HTTPS的线路上进行通信时极易被中间人窃听和篡改。</p><p><strong>如何改进？</strong>：既然信息会被Base64解码得到，那么如果采用单向加密方式是否就能避免这种问题？采用摘要方式生成认证请求头的方式可以避免信息泄漏。例如将用户信息使用用户密码采用摘要算法（如<strong>Hmac-SHA1或Hmac-SHA256</strong>）得到一个摘要<code>Signature</code>，然后采用<code>Basic &lt;username&gt;:&lt;Signature&gt;</code>的格式请求即可。另外还可以加入时间等信息进一步增加安全性。</p><h3 id="digest认证" tabindex="-1"><a class="header-anchor" href="#digest认证"><span>DIGEST认证</span></a></h3><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ol><li><a href="lianjie">图解HTTP</a></li></ol>',16),c=[t];function n(l,r){return i(),s("div",null,c)}const d=a(o,[["render",n],["__file","application.html.vue"]]);export{d as default};
