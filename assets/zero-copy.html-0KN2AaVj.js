import{_ as c,r as t,o as l,c as d,a as e,d as o,b as a,w as r,e as p}from"./app-Ec_z8kpw.js";const i={},h=p('<h2 id="零拷贝" tabindex="-1"><a class="header-anchor" href="#零拷贝"><span>零拷贝</span></a></h2><p>在数据传输过程中，通常需要使用buffer作为载体，例如应用将自己的一块用户空间的数据写入到IO接口上就需要先将数据拷贝到内核buffer中，再由CPU进行数据拷贝到硬件上。</p><p>在网页请求这个例子中，用户会请求网页对应的js、css和图片等数据，通常情况下需要将所有的数据都先读取到用户空间，然后再从用户空间写入到网卡中，这一过程设计4次状态切换和4次数据拷贝。如果数据不用到达用户层而直接送往网卡就可以避免时间损耗，从而带来效率的提高。这种想法就是所谓的<strong>零拷贝</strong>。</p><p>总而言之，零拷贝是指<strong>直接将数据从内核态转发到硬件上</strong>。</p><h3 id="mmap" tabindex="-1"><a class="header-anchor" href="#mmap"><span>MMAP</span></a></h3><p>mmap可以将磁盘文件直接映射到内存中，此时就可以像读写内存一样直接读写磁盘文件的内容，这里用到了虚拟内存的设计，将文件内容按照页的方式映射到内存的多个页上。此时进程就可以像读写一个数组一样对文件进行访问，不用再使用<code>read</code>和<code>write</code>等系统调用，从而节省了很多时间。</p><p>使用mmap节省了一次<strong>内核态到用户态的数据拷贝</strong>。此外，写数据时直接从内核态buffer写入到<code>socker buffer</code>。</p><h3 id="sendfile" tabindex="-1"><a class="header-anchor" href="#sendfile"><span>sendfile</span></a></h3><p>sendfile 被设计用于在两个文件描述符之间拷贝数据，该过程完全是在内核态完成。调用sendfile会有如下过程：</p><ol><li>DMA机制将数据从磁盘拷贝到内核buf</li><li>CPU拷贝内核buf的数据到socket buf</li><li>DMA机制将socket buf的内容拷贝到网卡</li></ol><p>使用sendfile相比read、write方法少了一次拷贝过程，用户态切换也只有两次。</p><p>单纯使用sendfile<strong>并不能实现零拷贝</strong>，因为其过程还存在一次内核buf到socket buf的拷贝。</p><h3 id="dma-gather-copy" tabindex="-1"><a class="header-anchor" href="#dma-gather-copy"><span>DMA Gather COPY</span></a></h3><p>DMA gather Copy可以直接从数据源头收集数据，传统的DMA只能是从连续空间进行数据收集，而Gather copy可以直接收集不同数据源的数据，从而避免了cpu参与数据拷贝。这种方法需要硬件支持。</p>',14),f={href:"https://www.zhihu.com/people/mac-82-59",target:"_blank",rel:"noopener noreferrer"},_=e("img",{style:{"border-radius":"0.3125em","box-shadow":"0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08)"},src:"https://pic3.zhimg.com/v2-b63b86f41c920756e931f17a289a4cba_r.jpg"},null,-1),b=e("br",null,null,-1),u=e("div",{style:{color:"#999","border-bottom":"1px solid #d9d9d9",display:"inline-block",padding:"2px"}}," DMA Gather Copy",-1),m=e("h3",{id:"splice",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#splice"},[e("span",null,"Splice")])],-1),x=e("p",null,"Splice与sendfile非常类似，但是Splice使用管道替代了原来的内核buf到Socketbuf的拷贝过程。",-1),g=e("img",{style:{"border-radius":"0.3125em","box-shadow":"0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08)"},src:"https://pic1.zhimg.com/v2-b965b4ed689dc6a791a0cc3c21b3fcc0_r.jpg"},null,-1),k=e("br",null,null,-1),y=e("div",{style:{color:"#999","border-bottom":"1px solid #d9d9d9",display:"inline-block",padding:"2px"}}," Splice 拷贝过程",-1),v=e("h3",{id:"参考文献",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考文献"},[e("span",null,"参考文献")])],-1),w={href:"https://zhuanlan.zhihu.com/p/410391372",target:"_blank",rel:"noopener noreferrer"};function C(M,z){const n=t("ExternalLinkIcon"),s=t("center");return l(),d("div",null,[h,e("p",null,[o("这里引用博主"),e("a",f,[o("码农的荒岛求生"),a(n)]),o("的说明图")]),e("div",null,[a(s,null,{default:r(()=>[_,b,u]),_:1})]),m,x,e("div",null,[a(s,null,{default:r(()=>[g,k,y]),_:1})]),v,e("p",null,[e("a",w,[o("1. 彻底理解零拷贝"),a(n)])])])}const D=c(i,[["render",C],["__file","zero-copy.html.vue"]]);export{D as default};
