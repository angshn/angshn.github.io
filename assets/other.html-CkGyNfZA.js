import{_ as e,o as r,c as a,e as n}from"./app-Ec_z8kpw.js";const o={},t=n('<h2 id="幂等性" tabindex="-1"><a class="header-anchor" href="#幂等性"><span>幂等性</span></a></h2><p><strong>幂等性</strong>是指一个操作不管执行多少次其产生的效果都是一致的。例如说，对于同样参数的新增操作应该只生成一次，多次新增操作和一次新增操作造成的效果是一样的。</p><h3 id="幂等性的场景有哪些" tabindex="-1"><a class="header-anchor" href="#幂等性的场景有哪些"><span>幂等性的场景有哪些？</span></a></h3><ol><li><strong>生产消费模型生产者重复生成。</strong></li></ol><p>生产者因为网络问题导致对同一个消息重复生成，从而造成消息队列中存在重复数据。例如重复下单这种非常严重的问题。</p><p>例如Kafka中Broker对消息保存完成之后发送ACK时，客户端断开连接了，这时客户端重启之后就会重复发送一个生产消息，这时候就产生重复消息了。</p><ol start="2"><li><strong>前端重复提交。</strong></li></ol><p>用户手快多点了几次，或者有人模拟接口调用直接使用postman或者其他自动化工具请求。</p><ol start="3"><li><strong>消息重复消费。</strong></li></ol><p>对消息队列中的数据采用手动提交时，消费完成之后在踢脚动作之前因为其他原因断开连接了，导致下一次还会接着消费同一个消息。</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h3><h4 id="kafka如何解决生产幂等" tabindex="-1"><a class="header-anchor" href="#kafka如何解决生产幂等"><span>Kafka如何解决生产幂等？</span></a></h4><p>先不讨论Kafka如何解决，首先考虑自己如何实现消息队列的幂等性。</p><p>首先，每个生产者对生成的消息都携带一个唯一id，也就是说我们允许消息队列中存在重复消息。消费者拿到消息后首先检查这个id对应的数据是否已经消费过了，如果没有消费过就消费，否则直接丢弃。</p><p>设计思路就是引入<strong>唯一性</strong>，涉及的工作就是如何验证唯一性。一种直接的方案就是将处理过的id存入到数据库+缓存双库中，这样就可以快速判断是否处理过。</p><p>唯一ID可以考虑使用Redis生成全局唯一，或者使用分布式ID：雪花算法，或者直接使用现成的百度uid-generator和美团的leaf。</p><p>此外也可以使用数据库主键，插入一条数据来获取唯一主键id（mysql插入数据生成主键会上锁）。</p><p><strong>Kafka是如何做的呢？</strong></p><p>Producer在和Kafka连接通信是会被分配一个<strong>PID</strong>，Producer发送数据的每个Topic和Partition都有一个从<strong>0</strong>开始的<strong>SequenceNumber</strong>。Broker端会为每个Partition维护一个&lt;PID,Partion&gt;到SequenceNumber的映射。</p><p>除了字段上的定义，Kafka还引入和数据库事务类似的事务机制。对于新接受到的消息，broker端会进行如下判断：</p><ol><li>如果新消息的sequence number正好是broker端维护的&lt;PID,Partition&gt; -&gt; sequence number大1，说broker会接受处理这条消息。</li><li>如果新消息的sequence number比broker端维护的sequence number要小，说明时重复消息，broker可以将其直接丢弃</li><li>如果新消息的sequence number比broker端维护的sequence number要大过1，说明中间存在了丢数据的情况，那么会响应该情况，对应的Producer会抛出OutOfOrderSequenceException。</li></ol><p>[TODO]太复杂了，后面在看</p><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3>',23),s=[t];function i(p,c){return r(),a("div",null,s)}const d=e(o,[["render",i],["__file","other.html.vue"]]);export{d as default};
